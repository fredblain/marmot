workers: 2
#tmp_dir: ...
test:
  - func: marmot.experiment_simple.parsers_simple.parse_wmt_to_text
    args:
      - tiny_test/EN_ES.tgt_ann.test
      - tiny_test/EN_ES.source.test

training:
   - func: marmot.experiment_simple.parsers_simple.parse_wmt_to_text
     args:
       - tiny_test/EN_ES.tgt_ann.train
       - tiny_test/EN_ES.source.train
#   - func: get_corpus
#     args:
#       - target
#       - source
#       - 0

additional:
  - module: marmot.experiment_simple.representation_generator.RepresentationGenerator
    args: 
      - marmot.experiment_simple.parsers_simple.get_pos_tagging # function to use
      - 'target'                                     # data to use (source, target, tags or combinations)
      - tiny_test/tree-tagger                                  # parameters of the function, any number
      - tiny_test/spanish-par-linux-3.2-utf8.bin
      - 'target_pos'
  - module: marmot.experiment_simple.representation_generator.RepresentationGenerator
    args:
      - marmot.experiment_simple.parsers_simple.get_pos_tagging
      - 'source'
      - tiny_test/tree-tagger
      - tiny_test/english-utf8.par
      - 'source_pos'
  - module: marmot.experiment_simple.representation_generator.RepresentationGenerator
    args:
      - marmot.experiment_simple.parsers_simple.get_alignments
      - ['source', 'target']
      - type: function_output
        func: marmot.util.alignments.train_alignments
        args:
          - tiny_test/europarl.1000.en
          - tiny_test/europarl.1000.es
          - align_model
      - '' # this is not a placeholder, this parameter should be an empty string
      - ''

# if 'sequential', contexts are generated as lists of lists (lists of sequences)
# if 'plain', a single list of contexts is generated
# if 'token', a separate list of contexts for every token
contexts: plain
filters:
  - min_count: 100
  - min_label_count: 30
  - proportion: 2

feature_extractors:
  - module: marmot.features.token_count_feature_extractor.TokenCountFeatureExtractor
  - module: marmot.features.alignment_feature_extractor.AlignmentFeatureExtractor
    args:
      - ''                                               # alignment model
      - ''     # parallel corpus - source
      - ''     # parallel corpus - target
  - module: marmot.features.dictionary_feature_extractor.DictionaryFeatureExtractor
    args:
      - 'spanish'              # target language for stopwords extraction
  - module: marmot.features.lm_feature_extractor.LMFeatureExtractor
    args:
      - tiny_test/europarl.1000.es # file for LM
      - 3                                            # LM order
  - module: marmot.features.pos_feature_extractor.POSFeatureExtractor
    args:
      - tiny_test/tree-tagger
      - tiny_test/english-utf8.par
      - tiny_test/spanish-par-linux-3.2-utf8.bin

