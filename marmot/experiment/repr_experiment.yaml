workers: 10
tmp: &tmp_dir tiny_test/tmp_dir
test:
    output: tiny_test/EN_ES.tgt_ann.test

datasets:
  training:
    - module: marmot.representations.wmt_representation_generator.WMTRepresentationGenerator
      args:
        - tiny_test/EN_ES.tgt_ann.train
        - tiny_test/EN_ES.source.train
        - *tmp_dir
        - False
  test:
    - module: marmot.representations.wmt_representation_generator.WMTRepresentationGenerator
      args:
        - tiny_test/EN_ES.tgt_ann.test
        - tiny_test/EN_ES.source.test
        - *tmp_dir
        - False

representations:
  - module: marmot.representations.alignment_representation_generator.AlignmentRepresentationGenerator
    args:
      - tiny_test/europarl_align_model
  - module: marmot.representations.pos_representation_generator.POSRepresentationGenerator
    args:
      - tiny_test/tree-tagger
      - tiny_test/spanish-par-linux-3.2-utf8.bin
      - 'target'
      - *tmp_dir
  - module: marmot.representations.pos_representation_generator.POSRepresentationGenerator
    args:
      - tiny_test/tree-tagger
      - tiny_test/english-utf8.par
      - 'source'
      - *tmp_dir
  - module: marmot.representations.google_translate_representation_generator.GoogleTranslateRepresentationGenerator
    args:
      - 'es'

# if 'sequential', contexts are generated as lists of lists (lists of sequences)
# if 'plain', a single list of contexts is generated
# if 'token', a separate list of contexts for every token
# TODO: change the contexts param name to 'data_type' for clarity
contexts: plain
filters:
  - min_count: 100
  - min_label_count: 30
  - proportion: 2

features:
  binarize: True

feature_extractors:
  - module: marmot.features.token_count_feature_extractor.TokenCountFeatureExtractor
  - module: marmot.features.alignment_feature_extractor.AlignmentFeatureExtractor
    args:
      - ''                                               # alignment model
      - ''     # parallel corpus - source
      - ''     # parallel corpus - target
  - module: marmot.features.dictionary_feature_extractor.DictionaryFeatureExtractor
    args:
      - 'spanish'              # target language for stopwords extraction
  - module: marmot.features.lm_feature_extractor.LMFeatureExtractor
    args:
      - tiny_test/europarl.1000.es # file for LM
      - 3                                            # LM order
  - module: marmot.features.source_lm_feature_extractor.SourceLMFeatureExtractor
    args:
      - tiny_test/europarl.1000.en # file for LM
      - 3                                            # LM order
  - module: marmot.features.google_translate_feature_extractor.GoogleTranslateFeatureExtractor
    args:
      - 'es'
  - module: marmot.features.pos_feature_extractor.POSFeatureExtractor
    args:
      - tiny_test/tree-tagger
      - tiny_test/english-utf8.par
      - tiny_test/spanish-par-linux-3.2-utf8.bin
  - module: marmot.features.wordnet_feature_extractor.WordnetFeatureExtractor
    args:
      - 'en'
      - 'spa'

learning:
  classifier:
     module: sklearn.ensemble.RandomForestClassifier
