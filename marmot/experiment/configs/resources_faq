Representation generators (get input data, return data objects):

	module: marmot.representations.word_qe_additional_representation_generator.WordQEAdditionalRepresentationGenerator
	arguments:
		- source text
		- machine-translated text
		- labels
		- list of files with additional representations (e.g. alignments)
		- list of names of additional representations (one per file)
	all files should be sentence-aligned

Additional representation generators (get data object, return data object with a new representation added):

	module: marmot.representations.alignment_file_representation_generator.AlignmentFileRepresentationGenerator
    arguments:
		- lexical translation probabilities (file lex.f2e generated by Moses)
	NB: this representation generator requires that a data object has 'alignment_file' field

	module: marmot.representations.pos_representation_generator.POSRepresentationGenerator
	arguments:
		- TreeTagger binary (/path-to-tree-tagger/bin/tree-tagger)
		- TreeTagger parameters file for the language
		- language label ('target' or 'source')
		- temporary folder

Feature extractors (get context objects, return lists of features):

	module: marmot.features.alignment_feature_extractor.AlignmentFeatureExtractor
	arguments:
		- alignment model (not needed if AlignmentFileRepresentationGenerator was specified before)
		- source data for alignment model training (not needed if alignment model is provided or AlignmentFileRepresentationGenerator was specified before)
		- target data for alignment model training (not needed if alignment model is provided or AlignmentFileRepresentationGenerator was specified before)
	
	module: marmot.features.dictionary_feature_extractor.DictionaryFeatureExtractor
	arguments:
		- target language (e.g. 'spanish', 'german')
	
	module: marmot.features.lm_feature_extractor.LMFeatureExtractor
	arguments:
		- ngram counts for the target language
		- corpus for LM training (not needed if ngram counts file is provided)
		- path to SRILM ngram-count binary (not needed if ngram counts file is provided)
		- temporary dir (optional, folder "tmp_dir" is created if the parameter is not specified)
		- LM order (default 5)
	ngram counts file is generated with ngram-count program from SRILM (http://www.speech.sri.com/projects/srilm/manpages/ngram-count.1.html):
		./ngram-count -text corpus-file -lm lm-file -order 5 -write ngram-count-file

	module: marmot.features.source_lm_feature_extractor.SourceLMFeatureExtractor
	arguments:
		- ngram counts for the source language
		- corpus for LM training (not needed if ngram counts file is provided)
		- path to SRILM ngram-count binary (not needed if ngram counts file is provided)
		- temporary dir (optional, folder "tmp_dir" is created if the parameter is not specified)
		- LM order (default 5)

	module: marmot.features.pos_feature_extractor.POSFeatureExtractor
	arguments:
		- path to TreeTagger binary
		- path to TreeTagger parameters for the source
		- path to TreeTagger parameters for the target
